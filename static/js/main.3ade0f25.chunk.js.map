{"version":3,"sources":["components/Button/styles.ts","pages/Home/styles.ts","pages/Home/index.tsx","pages/Lottie/styles.ts","pages/Lottie/index.tsx","pages/Mix/styles.ts","pages/Mix/index.tsx","pages/Transforms2D/styles.ts","pages/Transforms2D/index.tsx","pages/Transforms3D/styles.ts","assets/chica.jpeg","pages/Transforms3D/index.tsx","pages/Transitions/styles.ts","pages/Transitions/index.tsx","routes/index.tsx","styles/global.ts","App.tsx","index.tsx"],"names":["Button","styled","div","color","Container","ButtonsContainer","Home","history","useHistory","onClick","push","LottiePage","defaultOptions","loop","autoplay","animationData","animatedCat","options","height","width","RowContainer","a","NavBar","NavItem","Mix","href","ExampleContainer","Transforms2D","SecondExampleContainer","Transforms3D","src","Dog","alt","TimingFunctionExample","shouldStartAnimation","css","StartAnimationButton","SecondExample","Transitions","useState","startAnimation","setStartAnimation","type","Routes","exact","path","component","Lottie","createGlobalStyle","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3ade0f25.chunk.js","sourcesContent":["import styled from \"styled-components\";\nimport { ButtonProps } from \".\";\n\nexport const Button = styled.div<ButtonProps>`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin: 30px;\n  background-color: ${({ color }) => color};\n  cursor: pointer;\n  padding: 20px 30px;\n  width: 200px;\n  height: 80px;\n  border-radius: 10px;\n  border: 2px solid white;\n  -webkit-box-shadow: 5px 6px 32px -16px rgba(0, 0, 0, 0.75);\n  -moz-box-shadow: 5px 6px 32px -16px rgba(0, 0, 0, 0.75);\n  box-shadow: 5px 6px 32px -16px rgba(0, 0, 0, 0.75);\n\n  text-transform: uppercase;\n  color: white;\n  transition: 0.3s;\n\n  &:hover {\n    transform: scale(1.2);\n    -moz-transform: scale(1.2);\n    -ms-transform: scale(1.2);\n    -webkit-transform: scale(1.2);\n  }\n`;\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  height: 100vh;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n\n  h1 {\n    padding: 20vh 0 10vh 0;\n  }\n`;\n\nexport const ButtonsContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  width: 50%;\n`;\n","import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Button } from \"../../components/Button/styles\";\n\nimport { Container, ButtonsContainer } from \"./styles\";\n\nconst Home: React.FC = () => {\n  const history = useHistory();\n\n  return (\n    <Container>\n      <h1>Animation Examples</h1>\n      <ButtonsContainer>\n        <Button color=\"#e8a7a7\" onClick={() => history.push(\"/transitions\")}>\n          Transitions\n        </Button>\n        <Button color=\"#e5e0a5\" onClick={() => history.push(\"/transforms2D\")}>\n          2D transforms\n        </Button>\n        <Button color=\"#a5ace5\" onClick={() => history.push(\"/transforms3D\")}>\n          3D transforms\n        </Button>\n        <Button color=\"#edb55c\" onClick={() => history.push(\"/lottie\")}>\n          Lottie\n        </Button>\n        <Button color=\"#abe5a5\" onClick={() => history.push(\"/mix\")}>\n          Mix\n        </Button>\n      </ButtonsContainer>\n    </Container>\n  );\n};\n\nexport default Home;\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n","import React from \"react\";\n\nimport Lottie from \"react-lottie\";\n\nimport { Container } from \"./styles\";\nimport animatedCat from \"../../assets/lotties/cat.json\";\n\nconst LottiePage: React.FC = () => {\n  const defaultOptions = {\n    loop: true,\n    autoplay: true,\n    animationData: animatedCat,\n  };\n\n  return (\n    <Container>\n      <h1>Lottie</h1>\n      <Lottie options={defaultOptions} height={400} width={400} />\n    </Container>\n  );\n};\n\nexport default LottiePage;\n","import styled from \"styled-components\";\n\ninterface ButtonProps {\n  color: string;\n}\n\nexport const Container = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const RowContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  margin: 5vh 0 15vh 0;\n\n  & a:nth-child(1) {\n    text-decoration: none;\n    padding: 20px 40px;\n    color: #e1332d;\n    border: 3px solid #e1332d;\n    text-transform: uppercase;\n    font-size: 40px;\n    font-weight: 300;\n    letter-spacing: -2px;\n    transition: all 0.5s;\n\n    &:hover {\n      font-weight: 900;\n      letter-spacing: 10px;\n      border: 7px solid #e1332d;\n    }\n  }\n`;\n\nexport const Button = styled.a<ButtonProps>`\n  text-decoration: none;\n  padding: 20px 40px;\n  margin-left: 20px;\n  color: ${({ color }) => color};\n  border: 5px solid ${({ color }) => color};\n  text-transform: uppercase;\n  font-size: 40px;\n  font-weight: 300;\n  letter-spacing: 2px;\n  position: relative;\n  transition: all 1s;\n\n  &:before {\n    content: \"\";\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background-color: ${({ color }) => color};\n    transition: 1s;\n    transform: rotateX(90deg);\n    z-index: -1;\n  }\n\n  &:after {\n    content: \"\";\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background-color: ${({ color }) => color};\n    transition: 1s;\n    transform: rotateY(90deg);\n    z-index: -1;\n  }\n\n  &:hover:before {\n    transform: rotateX(0deg);\n  }\n\n  &:hover:after {\n    transform: rotateY(0deg);\n  }\n\n  &:hover {\n    color: #fff;\n  }\n`;\n\nexport const NavBar = styled.div`\n  padding: 0;\n  margin: 0;\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nexport const NavItem = styled.a`\n  text-decoration: none;\n  color: #3d3d3d;\n  font-size: 22px;\n  display: block;\n  padding: 10px 15px;\n  position: relative;\n\n  &:before {\n    content: \"\";\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 2px;\n    background-color: #3d3d3d;\n    transform: scaleX(0);\n    transition: all 0.5s;\n    transform-origin: left;\n  }\n\n  &:hover:before {\n    transform: scaleX(1);\n  }\n\n  &:after {\n    content: \"\";\n    position: absolute;\n    bottom: 0;\n    left: 0;\n    width: 100%;\n    height: 2px;\n    background-color: #3d3d3d;\n    transform: scaleX(0);\n    transition: all 0.5s;\n    transform-origin: right;\n  }\n\n  &:hover:after {\n    transform: scaleX(1);\n  }\n`;\n","import React from \"react\";\n\nimport { Container, RowContainer, Button, NavItem, NavBar } from \"./styles\";\n\nconst Mix: React.FC = () => {\n  return (\n    <Container>\n      <h1>Mix of some animations using transition and transform</h1>\n\n      <RowContainer>\n        {/* Example without being a component */}\n        <a href=\"#\">Button</a>\n\n        {/* Example being a component */}\n        <Button href=\"#\" color=\"#262626\">\n          Button\n        </Button>\n      </RowContainer>\n\n      {/* NavBar */}\n      <NavBar>\n        <NavItem>Home</NavItem>\n        <NavItem>About</NavItem>\n        <NavItem>Services</NavItem>\n        <NavItem>Portfolio</NavItem>\n        <NavItem>Contact</NavItem>\n      </NavBar>\n    </Container>\n  );\n};\n\nexport default Mix;\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const ExampleContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n\n  div {\n    height: 150px;\n    width: 150px;\n    background-color: #40739e;\n    color: white;\n    line-height: 150px;\n    text-align: center;\n    font-size: 24px;\n    margin: 20px;\n    margin-right: auto;\n    margin-left: auto;\n    transition: transform 1s;\n  }\n\n  & div:nth-child(1):hover {\n    transform: scale(1.5);\n  }\n\n  & div:nth-child(2):hover {\n    transform: translateX(320px);\n  }\n\n  & div:nth-child(3):hover {\n    transform: rotate(180deg);\n  }\n\n  & div:nth-child(4):hover {\n    transform: skew(20deg);\n  }\n`;\n","import React from \"react\";\n\nimport { Container, ExampleContainer } from \"./styles\";\n\nconst Transforms2D: React.FC = () => {\n  return (\n    <Container>\n      <h1>Transform Functions (2D): </h1>\n\n      <ExampleContainer>\n        <div>Scale</div>\n        <div>Translate</div>\n        <div>Rotate</div>\n        <div>Skew</div>\n      </ExampleContainer>\n    </Container>\n  );\n};\n\nexport default Transforms2D;\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  width: 100%;\n  height: 100vh;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  perspective: 1000px; //princípio para o efeito 3D!\n\n  h1 {\n    padding: 30px 0 0 0;\n  }\n\n  img {\n    width: 300px;\n    display: block;\n    margin: auto;\n    margin-top: 200px;\n    transition: transform 1s;\n  }\n\n  img:hover {\n    transform: translateZ(500px); //depois trocar para 1200\n  }\n`;\n\nexport const SecondExampleContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n\n  img {\n    width: 300px;\n    display: block;\n    margin-left: 50px;\n    transition: transform 1s;\n\n    &:nth-child(1):hover {\n      transform: rotateZ(60deg);\n    }\n\n    &:nth-child(2):hover {\n      transform: rotateX(60deg);\n    }\n\n    &:nth-child(3):hover {\n      transform: rotateY(60deg);\n    }\n  }\n`;\n","export default __webpack_public_path__ + \"static/media/chica.8039bc4d.jpeg\";","import React from \"react\";\n\nimport { Container, SecondExampleContainer } from \"./styles\";\nimport Dog from \"../../assets/chica.jpeg\";\n\nconst Transforms3D: React.FC = () => {\n  return (\n    <>\n      <Container>\n        <h1>3D Transforms </h1>\n\n        <img src={Dog} alt=\"my-dog\" />\n      </Container>\n      <Container>\n        <h1>3D Transforms </h1>\n\n        <SecondExampleContainer>\n          <img src={Dog} alt=\"my-dog\" />\n          <img src={Dog} alt=\"my-dog\" />\n          <img src={Dog} alt=\"my-dog\" />\n        </SecondExampleContainer>\n      </Container>\n    </>\n  );\n};\n\nexport default Transforms3D;\n","import { ReactNode } from \"react\";\nimport styled, { css } from \"styled-components\";\n\ninterface TimingFunctionProps {\n  shouldStartAnimation?: boolean;\n}\n\nexport const Container = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const TimingFunctionExample = styled.div<TimingFunctionProps>`\n  width: 960px;\n\n  div {\n    margin: 2em;\n    width: 150px;\n    height: 50px;\n    padding: 10px 15px;\n    background-color: #e8a7a7;\n    color: #fff;\n    border-radius: 0.5em;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    font-size: 12px;\n\n    transition-property: translate();\n    transition-duration: 3s;\n\n    ${({ shouldStartAnimation }) =>\n      shouldStartAnimation &&\n      css`\n        transform: translate(900px, 0);\n      `}\n  }\n\n  & div:nth-child(1) {\n    transition-timing-function: ease;\n  }\n\n  & div:nth-child(2) {\n    transition-timing-function: linear;\n  }\n\n  & div:nth-child(3) {\n    transition-timing-function: ease-in;\n  }\n\n  & div:nth-child(4) {\n    transition-timing-function: ease-out;\n  }\n\n  & div:nth-child(5) {\n    transition-timing-function: ease-in-out;\n  }\n\n  & div:hover {\n    transform: translate(900px, 0);\n  }\n`;\n\nexport const StartAnimationButton = styled.div`\n  margin: 2em;\n  width: 150px;\n  height: 50px;\n  padding: 10px 15px;\n  background-color: #ce6171;\n  color: #fff;\n  border-radius: 0.5em;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-size: 12px;\n  cursor: pointer;\n`;\n\nexport const SecondExample = styled.div`\n  margin: 3vh 0;\n\n  button {\n    height: 90px;\n    width: 290px;\n    font-size: 28px;\n    color: white;\n    border: none;\n    background-color: #868ed6;\n    transition: all 1s ease-in 1s;\n\n    &:hover {\n      background-color: #86d686;\n      color: #4d914d;\n      border-radius: 50%;\n    }\n  }\n`;\n\n/*\n\n-- transition: all 1s ease-in 1s;\n\n                =\n\n--  transition-property: background-color color border-radius;\n--  transition-duration: 1s;\n--  transition-timing-function: ease-in\n\n*/\n\n/*\n\n-- Se quisesse que cada propriedade tivesse uma duração específica, e timing function:\n\n--  transition: background-color 3s ease-in-out 1s, color 2s ease 4s, border-radius 4s ease-out 5s;\n\n*/\n","import React, { useState } from \"react\";\n\nimport {\n  Container,\n  TimingFunctionExample,\n  StartAnimationButton,\n  SecondExample,\n} from \"./styles\";\n\nconst Transitions: React.FC = () => {\n  const [startAnimation, setStartAnimation] = useState(false);\n  return (\n    <Container>\n      <h1>Transitions - Timing Functions</h1>\n      <TimingFunctionExample shouldStartAnimation={startAnimation}>\n        <div>Ease (Default)</div>\n        <div>Linear</div>\n        <div>Ease-In</div>\n        <div>Ease-Out</div>\n        <div>Ease-In-Out</div>\n      </TimingFunctionExample>\n\n      <StartAnimationButton onClick={() => setStartAnimation(true)}>\n        Start Animation\n      </StartAnimationButton>\n\n      <h1>Transitions - Example with 1 line of code </h1>\n\n      <SecondExample>\n        <button type=\"button\">Second Example</button>\n      </SecondExample>\n    </Container>\n  );\n};\n\nexport default Transitions;\n","import React from \"react\";\n\nimport { Route, Switch } from \"react-router-dom\";\n\nimport Home from \"../pages/Home\";\nimport Lottie from \"../pages/Lottie\";\nimport Mix from \"../pages/Mix\";\nimport Transforms2D from \"../pages/Transforms2D\";\nimport Transforms3D from \"../pages/Transforms3D\";\nimport Transitions from \"../pages/Transitions\";\n\nconst Routes: React.FC = () => {\n  return (\n    <Switch>\n      <Route exact path=\"/\" component={Home} />\n      <Route path=\"/transitions\" component={Transitions} />\n      <Route path=\"/transforms2D\" component={Transforms2D} />\n      <Route path=\"/transforms3D\" component={Transforms3D} />\n      <Route path=\"/lottie\" component={Lottie} />\n      <Route path=\"/mix\" component={Mix} />\n    </Switch>\n  );\n};\n\nexport default Routes;\n","import { createGlobalStyle } from \"styled-components\";\n\nexport default createGlobalStyle`\n@import url('https://fonts.googleapis.com/css2?family=Roboto:wght@100;300;400;500;700;900&display=swap');\n\n  *{\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n    outline: 0;\n  }\n\n  body, input, button, h1{\n    font-family: 'Roboto', sans-serif;\n    font-size: 16px;\n    font-weight: bold;\n    text-align: center;\n  }\n\n  h1{\n    color: #cccccc;\n    text-transform: uppercase;\n    padding: 5vh 0;\n    font-size: 30px;\n  }\n\n  button{\n    cursor: pointer\n  }\n`;\n","import React from \"react\";\n\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nimport Routes from \"./routes\";\nimport GlobalStyle from \"./styles/global\";\n\nfunction App() {\n  return (\n    <Router>\n      <GlobalStyle />\n      <Routes />\n    </Router>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}